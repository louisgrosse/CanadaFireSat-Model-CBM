defaults:
  - _self_
  - global_config

model_path: "./results/models/CNN_SITS_ONLY/{TBD}" # Need to specify exact model path
config_name: "config_file.yaml"
mode: "image"
split: "val" # test
output_dir: "./results/models/CNN_SITS_ONLY"
seed: 42
with_region: True
fwi_ths: [5, 10, 20, 30]
n_plots: 50
size_plots: 6
suffix: "one"

MODEL:
  architecture: "MSClipFacto"
  msclip_model_name: "Llama3-MS-CLIP-Base"
  msclip_ckpt: ""        # or path to local ckpt; leave empty to use HF download configured in build_model
  input_img_res: 264
  img_res: 224
  train_max_seq_len: 5
  val_max_seq_len: 5
  input_dim: 10
  patch_size: 16
  num_classes: 2
  channels: 10
  threshold: 0.5
  use_cls_fusion: false
  ds_labels: true
  use_l1c2l2a_adapter: false
  l1c2l2a_Adapter_loc: "${paths.l1c2l2a_Adapter_loc}"
  out_H: 25
  out_W: 25
  temp_enc_type: "attention" 
  temp_depth: 2
  use_conv_decoder: true
  freeze_msclip: true
  clearclip:
    enabled: true          
    apply_to_last_n: 1     
    keep_ffn: false        # should be false for ClearCLIP
    keep_residual: false   # should be false for ClearCLIP
    use_self_self_attn: true    
    ss_attn_iter: 1             
    ss_attn_temp: null          
    override_forward_for_dense: true

SOLVER:
  num_epochs: 20
  num_warmup_epochs: 2
  pos_weight: 6.7
  loss_function:  combined_dice_ce


### Leveraging RAW *.npy files ###
#DATASETS:
#  kwargs:
#    mean_file: "${paths.bands_mean}"
#    std_file: "${paths.bands_std}"
#    with_loc: False
#    with_doy: True
#    # bands: possibility to specify the selected bands.
#  train:
#    paths: "${paths.split}"
#    base_dir: ["${paths.pos_sits}", ${paths.neg_sits}"]
#    label_dir: "${paths.label}"
#    batch_size: 12
#    num_workers: 8

#  eval:
#    paths: "${paths.split}"
#    base_dir: ["${paths.pos_sits}", ${paths.neg_sits}"]
#    label_dir: "${paths.label}"
#    batch_size: 12
#    num_workers: 8
#    hard: False

### Leveraging Hf parquet files ###
DATASETS:
  mode: "huggingface"
  kwargs:
    mean_file: "${paths.bands_mean}"
    std_file: "${paths.bands_std}"
    with_loc: False
    with_doy: True
    # bands: possibility to specify the selected bands.
  train:
    data_dir: "${paths.hf_data}"
    batch_size: 24
    num_workers: 8

  eval:
    data_dir: "${paths.hf_data}"
    batch_size: 24
    num_workers: 8
    hard: False